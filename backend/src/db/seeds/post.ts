import { InferInsertModel } from "drizzle-orm";
import {faker} from "@faker-js/faker";
import { DB, db } from "..";
import { users } from "../schema";
import { posts } from "../schema/post";

/**
 * mock
 * @returns A promise containing an array of posts
 * Not using zod validation here as it's not necessary
 */
async function mock(): Promise<InferInsertModel<typeof posts>[]> {
  const usersData = await db.select().from(users);
  const data: InferInsertModel<typeof posts>[] = [];
  for (let i = 0; i < 100; i++) {
    data.push({
      title: faker.lorem.words(),
      content: faker.lorem.paragraphs(20, "<br/><br/>"),
      coverImage: `http://${faker.lorem.word()}.com`, // TODO => Make this a random image from a series of images
      userId: faker.helpers.arrayElement(usersData).id
    });
  }
  return data;
}

/**
 * seed
 * @param db The database to perform the insert on
 *
 * Inserts the data generated by mock into the users table of the database passed in
 */
export async function seed(db: DB) {
  await db.insert(posts).values(await mock());
}